blueprint:
  name: Monitor entity availability with a label
  description: Monitor an entity availability identified with a dedicated label
  domain: automation
  source_url: https://github.com/jeanrobertjs/homeassistant-customizations/blob/main/blueprints/entity-availability-check/entity_availability_check_label.yaml

  # Blueprint inputs
  input:
    time1:
      name: Test time 1
      description: 'Note: no execution if "00:00"'
      default: '10:00:00'
      selector:
        time: {}
    time2:
      name: Test time 2
      description: 'Note: no execution if "00:00"'
      default: '00:00:00'
      selector:
        time: {}
    time3:
      name: Test time 3
      description: 'Note: no execution if "00:00"'
      default: '00:00:00'
      selector:
        time: {}
    time4:
      name: Test time 4
      description: 'Note: no execution if "00:00"'
      default: '00:00:00'
      selector:
        time: {}
    time5:
      name: Test time 5
      description: 'Note: no execution if "00:00"'
      default: '00:00:00'
      selector:
        time: {}
    selector:
      name: Label to monitor
      description: Label to identify entities to be checked
      default: ""
    actions:
      name: Actions to do if unavailable entities
      description: 'Notify or other... {{entities}} in the message will be remplaced by the non-available entity list.'
      selector:
        action:

# Variables
variables:
  selector: !input selector
  time1: !input time1
  time2: !input time2
  time3: !input time3
  time4: !input time4
  time5: !input time5

  entities: >-
    {% set result = namespace(entities=[]) %}
    {% set entity_list = label_entities(selector) %}

    {% for item in entity_list %}
      {% for state in states | selectattr('state', 'match', 'unavailable') | selectattr('entity_id', 'match', item) %}
        {% set result.entities = result.entities + [state.name] %}
      {% endfor %}
    {% endfor %}
    {{result.entities|unique|join('\n')}} 

# Triggers on specified times
trigger:
  - platform: time
    at: !input time1
  - platform: time
    at: !input time2
  - platform: time
    at: !input time3
  - platform: time
    at: !input time4
  - platform: time
    at: !input time5

# Conditions > Not shown if test is empty
condition:
  - condition: template
    value_template: "{{ entities | length > 5 }}"
  - condition: template
    value_template: "{{(now()) >= today_at('00:00:59')}}"

# Actions : execute the action defined as parameter
action:
  - choose: []
    default: !input actions

mode: single
max_exceeded: silent